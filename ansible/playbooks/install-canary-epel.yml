---
# install-canary-epel.yml
# Prove hosts can see EPEL from your mirror only.

- name: Install EPEL canary from mirror-only
  hosts: all
  become: true
  gather_facts: true

  vars:
    canary_candidates:
      - ripgrep
      - fzf
      - bat
      - htop
      - ncdu

    # which EPEL-like repos to try per distro/major
    repoids_by_distro:
      "Red Hat Enterprise Linux|9": ["epel-local"]
      "RedHat|9": ["epel-local"]         # sometimes facts use "RedHat"
      "CentOS Stream|9": ["epel-local", "epel-next-local"]

    distro_key: "{{ ansible_distribution }}|{{ ansible_distribution_major_version }}"
    epel_repoids: "{{ repoids_by_distro.get(distro_key, ['epel-local']) }}"

  pre_tasks:
    - name: Skip non-EL hosts (Ubuntu, etc.)
      meta: end_play
      when: ansible_os_family != "RedHat"

    - name: Ensure dnf-plugins-core for repoquery
      dnf:
        name: dnf-plugins-core
        state: present

  tasks:
    - name: Probe candidates strictly with repoquery against allowed EPEL repos
      # Test each (repoid, pkg) pair; rc==0 only when found
      command: >
        dnf repoquery --qf "%{name}"
        --disablerepo='*' --enablerepo={{ item.0 }}
        {{ item.1 }}
      register: probe_results
      changed_when: false
      failed_when: false
      loop: "{{ epel_repoids | product(canary_candidates) | list }}"
      loop_control:
        label: "{{ item.0 }} -> {{ item.1 }}"

    - name: Pick first available candidate (repoid + pkg)
      set_fact:
        canary_repoid: "{{ (probe_results.results | selectattr('rc','eq',0) | map(attribute='item.0') | list | first) }}"
        canary_pkg:    "{{ (probe_results.results | selectattr('rc','eq',0) | map(attribute='item.1') | list | first) }}"

    - name: Show chosen canary
      debug:
        msg: "Chosen canary {{ canary_pkg | default('NONE') }} from {{ canary_repoid | default('NONE') }}"

    - name: Fail if no candidate found in approved EPEL repos
      fail:
        msg: "No candidate package available in {{ epel_repoids }}. Tried: {{ canary_candidates }}"
      when: canary_pkg is not defined or canary_repoid is not defined

    - name: Install canary from mirror ONLY (disable everything else)
      dnf:
        name: "{{ canary_pkg }}"
        state: present
        enablerepo: "{{ canary_repoid }}"
        disablerepo: "*"
        update_cache: yes

